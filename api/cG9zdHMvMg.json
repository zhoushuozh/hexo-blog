{"per_page":10,"total":2,"current":2,"data":[{"title":"博客从Firekylin迁移到Hexo","date":"2018-03-20T16:00:00.000Z","excerpt":"<h2 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h2><p>之前使用的一直是Firekylin，Firekylin是由360公司Web前端工程师组成的专业团队 75Team 进行开发和维护，基于ThinkJS开发，快速很快且后台管理很方便。但是前些天突然想把博客放到二级目录，在折腾的过程中出现了一些问题，如静态资源无法加载，尝试了很多办法，最终都没不能完全解决这个问题。查了一下，<code>Firekylin</code>在设计之初没有考虑子目录，本着“生命不息，折腾不止”的精神，我决定把博客迁移到<code>Hexo</code>。</p>","slug":"firekylin-hexo","tags":["Hexo"]},{"title":"【笔记】 vim命令大全","date":"2018-03-20T03:39:21.000Z","thumbnail":"https://cdn.zhoushuo.me/vim.jpg","excerpt":"","slug":"vim-command","tags":["Vim","编辑器"]},{"title":"使用JS和Canvas做一个画板","date":"2018-03-10T17:22:14.000Z","thumbnail":"https://cdn.zhoushuo.me/zhoushuodrawing.png","excerpt":"","slug":"drawing-borad","tags":["Canvas","HTML5","JavaScript"],"categories":["前端"]},{"title":"HTML5 Canvas 基础","date":"2018-03-05T15:21:54.000Z","excerpt":"<p><code>&lt;canvas&gt;</code> 是HTML5新增的元素，可以用于绘制图形，制作照片，创建动画。<code>&lt;canvas&gt;</code> 标签只是图形容器，它没有自己的行为，必须使用脚本来绘制图形。</p>\n<h3 id=\"创建一个canvas\"><a href=\"#创建一个canvas\" class=\"headerlink\" title=\"创建一个canvas\"></a>创建一个canvas</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mycanvas\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"300\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"300\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>","slug":"html5-canvas","tags":["Canvas","HTML5"],"categories":["前端"]},{"title":"堆排序解析及JavaScript实现","date":"2018-02-27T17:35:21.000Z","excerpt":"<h3 id=\"什么是堆\"><a href=\"#什么是堆\" class=\"headerlink\" title=\"什么是堆\"></a>什么是堆</h3><p>在计算机科学中，二叉树（英语：Binary tree）是每个节点最多只有两个分支(不存在分支度大于<code>2</code>的节点)的树结构。通常分支被称作“左子树”和“右子树”。二叉树的分支具有左右次序，不能颠倒。</p>\n<p>二叉树的每个结点至多只有二棵子树（不存在度大于 <code>2</code> 的结点），二叉树的子树有左右之分，次序不能颠倒。二叉树的第 <code>i</code> 层至多有 <code>2i - 1</code> 个结点；深度为 <code>k</code> 的二叉树至多有 <code>2k - 1</code> 个结点；对任何一棵二叉树 <code>T</code>，如果其终端结点数为 <code>n0</code>，度为 <code>2</code> 的结点数为 <code>n2</code>，则<code>n0 = n2 + 1</code>。</p>","slug":"heap-sort","tags":["JavaScript","算法"]},{"title":"计数排序解析及JavaScript实现","date":"2018-02-26T14:32:45.000Z","excerpt":"<h3 id=\"计数排序\"><a href=\"#计数排序\" class=\"headerlink\" title=\"计数排序\"></a>计数排序</h3><p>计数排序（Counting sort）是一种稳定的线性时间排序算法。</p>\n<p>计数排序使用一个额外的数组}<code>C</code> ，其中第i个元素是待排序数组 <code>A</code> 中值等于 <code>i</code> 的元素的个数。然后根据数组 <code>C</code> 来将 <code>A</code> 中的元素排到正确的位置。当输入的元素是 <code>n</code> 个 <code>0</code> 到 <code>k</code> 之间的整数时，它的运行时间是 <code>Θ(n+k)</code>。计数排序不是比较排序，排序的速度快于任何比较排序算法。</p>","slug":"count-sort","tags":["JavaScript","算法"],"categories":["前端"]},{"title":"JS函数节流(throttle)与函数去抖(debounce)","date":"2018-01-18T13:23:43.000Z","excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>在浏览器 DOM 事件里面，有一些事件会随着用户的操作不间断触发。如：改变窗口大小（resize）、鼠标滚动（scroll）、鼠标移动（mousemove），如果把逻辑函数直接绑定到这些事件上，会严重影响性能，再比如把ajax请求直接绑定到keydown事件上，将在用户输入时产生频率很高的ajax请求，给服务器造成不必要的响应压力。</p>","slug":"js-throttle-debounce","tags":["JavaScript","性能优化"],"categories":["前端"]},{"title":"CSS多行文本溢出省略显示","date":"2017-10-13T12:52:21.000Z","excerpt":"<p>文本溢出我们经常用到的应该就是<code>text-overflow:ellipsis</code>了，相信大家也很熟悉，但是对于多行文本的溢出处理确接触的不是很多，最近在公司群里面有同事问到，并且自己也遇到过这个问题，所以专门研究过这个问题。</p>","slug":"text-overflow","tags":["CSS"],"categories":["前端"]}]}